openapi: 3.0.0
info:
  title: "mahjong"
  version: "1.0"
  description: "オンライン麻雀ゲームAPI"
tags:
  - name: Rooms
    description: Room management
  - name: Players
    description: Player management
  - name: WebSocket
    description: Real-time communication
paths:
  "/api/user/register":
    "post":
      "summary": "Register",
      "operationId": "register_api_user_register_post",
      "requestBody":
        "content":
          "application/json":
            "schema":
              "$ref": "#/components/schemas/UserCreate"
        "required": true
      "responses":
        "200":
          "description": "Successful Response",
          "content":
            "application/json":
              "schema":
                "$ref": "#/components/schemas/UserCreateResponse"
        "422":
          "description": "Validation Error",
          "content":
            "application/json":
              "schema":
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/user/login":
    "post":
      "summary": "Login For Access Token",
      "operationId": "login_for_access_token_api_user_login_post",
      "requestBody":
        "content":
          "application/json":
            "schema":
              "$ref": "#/components/schemas/EmailPasswordLogin"
        "required": true
      "responses":
        "200":
          "description": "Successful Response",
          "content":
            "application/json":
              "schema":
                "$ref": "#/components/schemas/Token"

        "422":
          "description": "Validation Error",
          "content":
            "application/json":
              "schema":
                "$ref": "#/components/schemas/HTTPValidationError"
  /room:
    post:
      tags:
        - Rooms
      summary: Create a room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                max_players:
                  type: integer
                game_type:
                  type: string
                  enum: [sanma, yonma]
      responses:
        201:
          description: Room created
    get:
      tags:
        - Rooms
      summary: Get room list
      responses:
        200:
          description: List of rooms

  /room/{room_id}:
    put:
      tags:
        - Rooms
      summary: Update room settings
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_type:
                  type: string
                  enum: [sanma, yonma]
      responses:
        200:
          description: Room updated
    delete:
      tags:
        - Rooms
      summary: Delete a room
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Room deleted

  /room/{room_id}/join:
    post:
      tags:
        - Players
      summary: Join a room
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Joined the room

  /room/{room_id}/leave:
    delete:
      tags:
        - Players
      summary: Leave a room
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Left the room

  /room/{room_id}/players:
    get:
      tags:
        - Players
      summary: Get list of players in a room
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of players

  /room/{room_id}/player/{player_id}:
    put:
      tags:
        - Players
      summary: Update a player's status
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        200:
          description: Player status updated

  /room/{room_id}/ws:
    get:
      tags:
        - WebSocket
      summary: WebSocket connection for real-time game updates
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        101:
          description: WebSocket connected
